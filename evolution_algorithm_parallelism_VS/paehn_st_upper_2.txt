//////////////////////////////////////////////////////////////////////////////////////////////////
//																								//
//										COMMON RULES											//
//																								//
// [debug], [algorithm] and so on, are called section.											//
//																								//
// Common rule here, but can be ignored if it is in conflict with section rule. 				//
// It has different default settings when choosing algorithm in section [algorithm].			//
// If you don't want them to be execute, you MUST set them to false. Do NOT comment or delete   //
// them.																						//
//																								//
// Almost section only can set true or false, but section [parameters].							//
//																								//
// Only accept "//" as comment. 																//
//																								//
// ORDER IS IMPORTANT!!!!!!!!!!!!!!!!!!!!!!!!!!													//
// Settings can be influenced if they are changing same settings.								//
// It will happen in same section. For example, if both kRandom and kLHD in [population] are set//
// to true, only the last one will work. Because last setting will override others.				//
// Influence also can be implicit, such as [algorithm] will change behaviors which are set in	//
// [population], even their settings didn't have same name, and vice versa.						//
//																								//
//////////////////////////////////////////////////////////////////////////////////////////////////

//
// Set which information should be print during runtime.
// The lines before "kReadConfig" is setting to true won't be print.
// all settings in section [debug] are false as default
//
[debug]
kReadConfig = [true]
kInitialPopulation = [false]
kInitialFitness = [false]
kMutantAndCrossover = [false]
kSelection = [false]

//
// Like being said in common rules, ORDER IS IMPORTANT!!!
// Although specific algorithm has been set as true,
// other settings appear after this section will override the behaviors of the algorithm.
// If you don't want to, please comment other settings using "//" or delete them.
//
// default setting is kCustom
//
[algorithm]
kDE = [false]
kSaDE = [false]
kSHADE = [false]
kLHDDE = [false]
kCustom = [true]

//
// Sample
//
[sample]
kPAEHN = [false]

//
// Set which method is using to initial population,
// only one method can be true.
// If there are multiple methods being set to true, only last one works.
// default using 'kRandom'
//
[population]
kRandom = [true]
kLHD = [false]
kLHDetect = [false]

//
// multi methods can be true.
// some methods may implicit NOT using "[parameters] subpopulation_size_"
// because the subpopulation size is dynamicly determined by the methods.
//
[subpopulation]
// when kPAEHN_Subpopulation is set to ture, the mutant strategy will force to cur-to-pbest/1/
// 
kPAEHN_Subpopulation = [true]


//
// "kRand" is default set to true, if you don't want to use it, please set it to false.
// If strategies are all set to false, default using "kRand".
// after parsing this section, program also produce parameter "de_num_of_strategies"
// which is counting how much strategies is using.
//
[mutant and crossover]
kRand = [false]
kBest = [false]
kCurToRand = [false]
kCurToBest = [true]
// if "kCurToPBest" is set to true, [memory] "kNPRank" will force to be set as true.
kCurToPBest = [false]


//
// This section is not working until [mutant and crossover] had two or more
// strategies are set to true.
// Onlt last one method set as true will work.
// If all set as false, default using "kSaDE_ss".
//
[strategies selection]
// If kSaDE_SS set as true, de_np_ should always be equal to de_next_gen_np_ or the program will be exited.
kSaDE_ss = [false]

[parameters control]
kCR = [true]
kF = [true]
kK = [false]
kP = [false]

//
// no default setting
//
[memory]
kNPRank = [true]
kArchive = [true]
// only work when [population] "kLHD" work.
kEvolutionPath = [false]

//
// For selecting which archive is going to be used.
// This sectioni is not working until "[memory] kArchive" was set to true.
// Only last one method set as true will work.
//
[archive]
kSHADE_Archive = [false]
kPAEHN_Archive = [true]

//
// This section is associated to "[memory] kMemoryCR".
// This section is not working until "[memory] kMemoryCR" was set to true
// Only last one method set as true will work.
// If all set as false, default using "kSaDE_CR"
//
[memory CR]
kSaDE_CR = [false]
kSHADE_CR = [false]
kPAEHN_SHADE_CR = [true]

//
// If "kMemoryByEachStrategy" is set to true, section [strategies selection] must
// have one method set as true. Or it will crash the program.
//
[memory CR setting]
kMemoryByEachStrategy = [false]


//
// This section is associated to "[memory] kMemoryF".
// This section is not working until "[memory] kMemoryF" was set to true
// Only last one method set as true will work.
// If all set as false, default using "kSHADE_F"
//
[memory F]
kSHADE_F = [false]
kPAEHN_SHADE_F = [true]

//
// This section is NOT for adaptive parameters control.
// Usually for producing parameters by using distribution.
// All setting in this section is default set to false.
//
[parameters control method]
// "kNormalF" is associated to "[parameters] normal_F_mean_" and "[parameters] normal_F_stddev_".
kNormalF = [false]
// "kRandomP" is associated to "[parameters] random_P_max_scale_" and "[parameters]
// random_P_min_".
kRandomP = [true]
// kArchiveSizeEqualNP is associated to "[parameter] archive_size_" or "[parameter] de_np_"
// this set as true will force setting archive_size_ equal "[parameter] de_np_"
kArchiveSizeEqualNP = [false]
kMemoryCR = [true]
kMemoryF = [true]



//
// Determine which method will be execute when individual's dimension out of bound.
// Only last one method set [true] will be executed.
// If all are set as false, default using kRerandomDimension.
//
[out bound handler]
kRerandomDimension = [false]
kBackToBound = [true]
kHalfBoundDistance = [false]
kRerandomIndividual = [false]


[selection]
kCompetition = [true]

[PAEHN]
// set to false for PAEHN-1
kPAEHN_RecurrsiveClearing = [true]
// set to true for PAEHN-2
kPAEHN_RandomNewPopulation = [false]
// set to true for PAEHN-3
kPAEHN_RandomPromisingArchive = [false]
// set to false for PAEHN-4
kPAEHN_ReinitializingCrowdingPromisingArchive = [true]


//
// Multi-criterions are allowed.
// But if any stop criterion reach, execute will be stopped.
// If no setting, default using "kMaxFE"
//
[stop criterion]
kMaxFE = [true]
kMaxGeneration = [false]
kReachOptimal = [false]

//
// you can specific parameter for each problem
//
[parameters]
de_CR_ = [0.5]
de_F_ = [0.5]
de_np_ = [100]
de_next_gen_np_ = [100]
archive_size_ = [100]
//
// de_K_ is only for Current_To_Rand
//
de_K_ = [0.5]
de_dim_ = [30]
//
// [X:Y]=Z (X <= Y)
// [X:Y] Means from dimension X to Y that going to set.
// Z is min/max limit of bound.
// Before setting bound, de_dim_ must be set already.
//
// This also can override previous value by using order.
// For example, [[0:4]=5, [2:3]=0] will produce [5,5,0,0,5]
// 
// bound_min_ = [[0:9]=-10, [10:19]=-20, [20:29]=-30]
bound_min_ = [[0:29]=-100]
bound_max_ = [[0:29]=100]
run_ = [51]
shade_H_ = [100]
de_P_ = [0.000]
sade_LP_ = [30]
sade_epsilion_ = [0.01] 
max_fe_ = [300000]
max_gen_ = [300]
optimal_ = [0.00000001]
normal_F_mean_ = [0.5]
normal_F_stddev_ = [0.3]
// Maximum scale of "de_np_" can be choosed.
random_P_max_scale_ = [0.20]
// Minimum top best individuals can be selected.
random_P_min_ = [2]
problem_amount_ = [49]
// decide which problems are going to be execute. Default set to 0(false).
// 1 to 28 are Benchmark Functions for the CECâ€™2013 Special Session and Competition on Large-Scale Global Optimization
// 29 to 48 are Bemcmarks for the MMOP problems of CEC'2013
//problem_set_ = [[0:28] = 0, [1:28]=1]
//problem_set_ = [[0:28] = 0, [2:2]=1]
//problem_set_ = [[0:28] = 0, [7:7]=1, [10:10]=1]
problem_set_ = [[0:48] = 0, [29:48]=1]
//problem_set_ = [[0:48] = 0, [35:37]=1]

//problem_set_ = [[0:48] = 0, [35:37]=1]
//problem_set_ = [[0:48] = 0, [41:41]=1]
//problem_set_ = [[0:48] = 0, [48:48]=1]
// MMOP 2D Functions:
//problem_set_ = [[0:48] = 0, [34:35]=1, [38:41]=1]
problem_set_ = [[0:48] = 0, [41:41]=1]
// PAEHN
paehn_H_ = [4]
paehn_subpopulation_size_ = [4]
paehn_stagnation_upper_ = [2]